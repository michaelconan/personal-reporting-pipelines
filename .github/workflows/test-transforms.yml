name: test dbt models

on:
  pull_request:
    branches:
      - main
    paths:
      - 'dbt/**/*.sql'
      - 'dbt/**/*.yml'
      - 'dbt/**/*.csv'
  push:
    branches:
      - main
    paths:
      - 'dbt/**'
      - 'dbt/**/*.yml'
      - 'dbt/**/*.csv'

permissions:
  contents: 'read'
  issues: 'write'
  pull-requests: 'write'

jobs:
  test_dbt:
    runs-on: ubuntu-latest
    env:
      DBT_PROJECT_DIR: dbt
      DBT_PROFILES_DIR: dbt
    steps:
      - name: check out code
        uses: actions/checkout@v4

      - name: set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install pipenv and dependencies
        run: |
          make install
          make dbt-deps

      - name: run local tests
        run: |
          make dbt-build-dev

      - name: compute coverage
        id: coverage
        run: |
          doc_coverage=$(make -s dbt-doc-coverage)
          test_coverage=$(make -s dbt-test-coverage)
          echo "doc_coverage<<EOF" >> $GITHUB_OUTPUT
          echo "$doc_coverage" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "test_coverage<<EOF" >> $GITHUB_OUTPUT
          echo "$test_coverage" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: post coverage comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## DBT Coverage Report

            ### Documentation Coverage
            
            ${{ steps.coverage.outputs.doc_coverage }}

            ### Test Coverage
            ${{ steps.coverage.outputs.test_coverage }}
